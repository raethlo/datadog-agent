// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cmd/agent/api/pb/api.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HostnameRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HostnameRequest) Reset()         { *m = HostnameRequest{} }
func (m *HostnameRequest) String() string { return proto.CompactTextString(m) }
func (*HostnameRequest) ProtoMessage()    {}
func (*HostnameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a6ca10d4596039b, []int{0}
}

func (m *HostnameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostnameRequest.Unmarshal(m, b)
}
func (m *HostnameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostnameRequest.Marshal(b, m, deterministic)
}
func (m *HostnameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostnameRequest.Merge(m, src)
}
func (m *HostnameRequest) XXX_Size() int {
	return xxx_messageInfo_HostnameRequest.Size(m)
}
func (m *HostnameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HostnameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HostnameRequest proto.InternalMessageInfo

// The response message containing the greetings
type HostnameReply struct {
	Hostname             string   `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HostnameReply) Reset()         { *m = HostnameReply{} }
func (m *HostnameReply) String() string { return proto.CompactTextString(m) }
func (*HostnameReply) ProtoMessage()    {}
func (*HostnameReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a6ca10d4596039b, []int{1}
}

func (m *HostnameReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostnameReply.Unmarshal(m, b)
}
func (m *HostnameReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostnameReply.Marshal(b, m, deterministic)
}
func (m *HostnameReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostnameReply.Merge(m, src)
}
func (m *HostnameReply) XXX_Size() int {
	return xxx_messageInfo_HostnameReply.Size(m)
}
func (m *HostnameReply) XXX_DiscardUnknown() {
	xxx_messageInfo_HostnameReply.DiscardUnknown(m)
}

var xxx_messageInfo_HostnameReply proto.InternalMessageInfo

func (m *HostnameReply) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

// The request message containing the user's name.
type TagRequest struct {
	Entity               string   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TagRequest) Reset()         { *m = TagRequest{} }
func (m *TagRequest) String() string { return proto.CompactTextString(m) }
func (*TagRequest) ProtoMessage()    {}
func (*TagRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a6ca10d4596039b, []int{2}
}

func (m *TagRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TagRequest.Unmarshal(m, b)
}
func (m *TagRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TagRequest.Marshal(b, m, deterministic)
}
func (m *TagRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TagRequest.Merge(m, src)
}
func (m *TagRequest) XXX_Size() int {
	return xxx_messageInfo_TagRequest.Size(m)
}
func (m *TagRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TagRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TagRequest proto.InternalMessageInfo

func (m *TagRequest) GetEntity() string {
	if m != nil {
		return m.Entity
	}
	return ""
}

// The response message containing the greetings
type TagReply struct {
	Tags                 []string `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TagReply) Reset()         { *m = TagReply{} }
func (m *TagReply) String() string { return proto.CompactTextString(m) }
func (*TagReply) ProtoMessage()    {}
func (*TagReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a6ca10d4596039b, []int{3}
}

func (m *TagReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TagReply.Unmarshal(m, b)
}
func (m *TagReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TagReply.Marshal(b, m, deterministic)
}
func (m *TagReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TagReply.Merge(m, src)
}
func (m *TagReply) XXX_Size() int {
	return xxx_messageInfo_TagReply.Size(m)
}
func (m *TagReply) XXX_DiscardUnknown() {
	xxx_messageInfo_TagReply.DiscardUnknown(m)
}

var xxx_messageInfo_TagReply proto.InternalMessageInfo

func (m *TagReply) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func init() {
	proto.RegisterType((*HostnameRequest)(nil), "pb.HostnameRequest")
	proto.RegisterType((*HostnameReply)(nil), "pb.HostnameReply")
	proto.RegisterType((*TagRequest)(nil), "pb.TagRequest")
	proto.RegisterType((*TagReply)(nil), "pb.TagReply")
}

func init() { proto.RegisterFile("cmd/agent/api/pb/api.proto", fileDescriptor_0a6ca10d4596039b) }

var fileDescriptor_0a6ca10d4596039b = []byte{
	// 261 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0x41, 0x4a, 0x03, 0x31,
	0x14, 0x86, 0x49, 0xd5, 0xda, 0x3e, 0xad, 0xa5, 0x4f, 0x94, 0x21, 0x88, 0x94, 0xe0, 0xa2, 0x28,
	0x4c, 0x50, 0x77, 0xee, 0xba, 0xaa, 0x0b, 0x57, 0x43, 0x2f, 0x90, 0xa9, 0x21, 0x0e, 0x4c, 0x93,
	0xd8, 0x3c, 0x85, 0xd9, 0x7a, 0x05, 0x37, 0xde, 0xcb, 0x2b, 0x78, 0x10, 0x49, 0x1c, 0x3b, 0xe8,
	0x2a, 0xf9, 0xff, 0xfc, 0x5f, 0xf2, 0xe7, 0x01, 0x5f, 0xad, 0x1f, 0xa5, 0x32, 0xda, 0x92, 0x54,
	0xbe, 0x92, 0xbe, 0x8c, 0x4b, 0xee, 0x37, 0x8e, 0x1c, 0xf6, 0x7c, 0xc9, 0xcf, 0x8c, 0x73, 0xa6,
	0xd6, 0xe9, 0x50, 0x59, 0xeb, 0x48, 0x51, 0xe5, 0x6c, 0xf8, 0x49, 0x88, 0x09, 0x8c, 0xef, 0x5d,
	0x20, 0xab, 0xd6, 0xba, 0xd0, 0xcf, 0x2f, 0x3a, 0x90, 0xb8, 0x82, 0x51, 0x67, 0xf9, 0xba, 0x41,
	0x0e, 0x83, 0xa7, 0xd6, 0xc8, 0xd8, 0x94, 0xcd, 0x86, 0xc5, 0x56, 0x8b, 0x0b, 0x80, 0xa5, 0x32,
	0x2d, 0x8a, 0xa7, 0xd0, 0xd7, 0x96, 0x2a, 0x6a, 0xda, 0x5c, 0xab, 0xc4, 0x39, 0x0c, 0x52, 0x2a,
	0xde, 0x86, 0xb0, 0x4b, 0xca, 0x84, 0x8c, 0x4d, 0x77, 0x66, 0xc3, 0x22, 0xed, 0x6f, 0x3e, 0x18,
	0xec, 0xcd, 0xe3, 0x17, 0xf0, 0x01, 0x0e, 0x16, 0x9a, 0x7e, 0xdf, 0xc7, 0xe3, 0xdc, 0x97, 0xf9,
	0xbf, 0x82, 0x7c, 0xf2, 0xd7, 0xf4, 0x75, 0x23, 0x4e, 0xde, 0x3e, 0xbf, 0xde, 0x7b, 0x63, 0x1c,
	0xc9, 0xd7, 0x6b, 0x69, 0x36, 0x7e, 0x25, 0x63, 0x43, 0x9c, 0xc3, 0xfe, 0x42, 0xd3, 0x52, 0x99,
	0x80, 0x47, 0x11, 0xea, 0xaa, 0xf2, 0xc3, 0xad, 0x8e, 0x7c, 0x96, 0x78, 0x14, 0x1d, 0x1f, 0x7b,
	0xdd, 0xb1, 0xcb, 0xb2, 0x9f, 0xe6, 0x74, 0xfb, 0x1d, 0x00, 0x00, 0xff, 0xff, 0xec, 0x28, 0xda,
	0x89, 0x67, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AgentClient is the client API for Agent service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AgentClient interface {
	// get the hostname
	GetHostname(ctx context.Context, in *HostnameRequest, opts ...grpc.CallOption) (*HostnameReply, error)
	GetTags(ctx context.Context, in *TagRequest, opts ...grpc.CallOption) (*TagReply, error)
}

type agentClient struct {
	cc *grpc.ClientConn
}

func NewAgentClient(cc *grpc.ClientConn) AgentClient {
	return &agentClient{cc}
}

func (c *agentClient) GetHostname(ctx context.Context, in *HostnameRequest, opts ...grpc.CallOption) (*HostnameReply, error) {
	out := new(HostnameReply)
	err := c.cc.Invoke(ctx, "/pb.Agent/GetHostname", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) GetTags(ctx context.Context, in *TagRequest, opts ...grpc.CallOption) (*TagReply, error) {
	out := new(TagReply)
	err := c.cc.Invoke(ctx, "/pb.Agent/GetTags", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AgentServer is the server API for Agent service.
type AgentServer interface {
	// get the hostname
	GetHostname(context.Context, *HostnameRequest) (*HostnameReply, error)
	GetTags(context.Context, *TagRequest) (*TagReply, error)
}

// UnimplementedAgentServer can be embedded to have forward compatible implementations.
type UnimplementedAgentServer struct {
}

func (*UnimplementedAgentServer) GetHostname(ctx context.Context, req *HostnameRequest) (*HostnameReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHostname not implemented")
}
func (*UnimplementedAgentServer) GetTags(ctx context.Context, req *TagRequest) (*TagReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTags not implemented")
}

func RegisterAgentServer(s *grpc.Server, srv AgentServer) {
	s.RegisterService(&_Agent_serviceDesc, srv)
}

func _Agent_GetHostname_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HostnameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).GetHostname(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Agent/GetHostname",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).GetHostname(ctx, req.(*HostnameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_GetTags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).GetTags(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Agent/GetTags",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).GetTags(ctx, req.(*TagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Agent_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Agent",
	HandlerType: (*AgentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetHostname",
			Handler:    _Agent_GetHostname_Handler,
		},
		{
			MethodName: "GetTags",
			Handler:    _Agent_GetTags_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cmd/agent/api/pb/api.proto",
}
